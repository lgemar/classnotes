9/5: 
Documentation: a contract between the user and the implementer

Binary search review: 
int bin_search(float* a, int n, float v) //no idea what this function is doing...

/** Binary search
  * Searches an array for a value using binary search.
  * @param[in] a The array to search
  * @param[in] n The size of @a a.
  * @param[in] v The value to search for. 
  * 
  * @pre @n n is <= size(a) --> this is an abstract contractual agreement
  * @pre @a for all i, j 0 <= i < j < n, a[i] <= a[j]
  * @returns idx such that (a[idx] == v && 0 <= idx < n) or 
                 (idx == -1 && there does not exist i, 0 <= i < n, a[i] == v)
  * operates in O(log n) operations.

// the "const" promises that none of the values in memory will be changed
int bin_search(const float* a, int n, float v);

Ways for improvement of binary search:
1.) Subranges -> low, high
2.) Only sorted arrays as of now
3.) Only floats as of now
